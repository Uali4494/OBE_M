{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Core/app-routing.module.ts","webpack:///src/app/Core/app.component.ts","webpack:///src/app/Core/app.component.html","webpack:///src/app/Core/app.module.ts","webpack:///src/app/Services/Header/header.service.ts","webpack:///src/app/Shared/Components/header/header.component.ts","webpack:///src/app/Shared/Components/header/header.component.html","webpack:///src/app/Shared/Components/side-bar/side-bar.component.ts","webpack:///src/app/Shared/Components/side-bar/side-bar.component.html","webpack:///src/app/Shared/Services/Global/auth.guard.ts","webpack:///src/app/Shared/Services/Global/global.service.ts","webpack:///src/app/Shared/Services/Global/interceptor.service.ts","webpack:///src/app/Shared/Services/Global/interconnected.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","DashboardModule","canActivate","ReportsModule","StudentModule","FrameworkModule","SettingModule","IndirectAssessmentsModule","PLOSModule","AppRoutingModule","forRoot","useHash","imports","AppComponent","router","ngxService","title","FacultyMember_ID","undefined","ApiUrl","document","getElementsByTagName","href","AppBaseURL","Number","localStorage","getItem","Semester_ID","Permissions","JSON","parse","Deaprtment_ID","Institute_ID","Token","IsStudent","Name","StudentID","navigate","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","newestOnTop","progressBar","progressAnimation","timeOut","positionClass","preventDuplicates","closeButton","titleClass","declarations","providers","bootstrap","HeaderService","http","baseUrl","data","post","providedIn","HeaderComponent","header","toastr","formBuilder","interConnectedService","submitted","User_Name","UpdatePasswordForm","group","Current_Password","required","New_Password","minLength","maxLength","Confirm_Password","validator","MustMatch","CurrentSemesterID","subscribe","message","toString","GetSemesterList","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","GetSemesterListBasedOnFaculty","Semester_Details_lst","error","ChangeSemesterID","target","clear","location","reset","$","modal","invalid","Update_Password_Form","UserID","UpdatePassword","success","UpdateSemesterID","ShowChangePassword","Logout","SideBarComponent","Is_Permission_Reports_Side_Bar","Is_Permission_Setting_Side_Bar","Is_Permission_Indirect_Assessment_Side_Bar","indexOf","AuthGuard","_router","next","state","GlobalService","Report_Sub_Tab","InterceptorService","cloned","clone","headers","set","handle","pipe","succ","err","status","InterconnectedService","messageSource","asObservable","searchSource","searchvaluetemp","GetSelectedCoursesCLOs","SetSelectedCoursesCLOs","GetSelectedFacultyDashboard","SetSelectedFacultyDashboard","CloseTab","TriggerCloseTab","GetCourseDetailsCounts","SetCourseDetailsCounts","searchvalue","environment","production","bootstrapModule","catch","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from '../Shared/Services/Global/auth.guard';\n\nconst routes: Routes = [\n  {\n      path: '',\n      redirectTo: 'dashboard',\n      pathMatch: 'full'\n  },\n  {\n      path: 'dashboard',\n      loadChildren: () => import('./../Features/Dashboard/dashboard.module').then(m => m.DashboardModule),\n      canActivate: [AuthGuard]\n  },\n  {\n    path: 'reports',\n    loadChildren: () => import('./../Features/Reports/reports.module').then(m => m.ReportsModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'student',\n    loadChildren: () => import('./../Features/student/student.module').then(m => m.StudentModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'framework',\n    loadChildren: () => import('./../Features/Framework/framework.module').then(m => m.FrameworkModule),\n    canActivate: [AuthGuard]\n  },\n  {\n      path: 'settings',\n    loadChildren: () => import('./../Features/setting/setting.module').then(m => m.SettingModule),\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'indirectAssessment',\n    loadChildren: () => import('./../Features/IndirectAssessments/IndirectAssessments.module').then(m => m.IndirectAssessmentsModule),\n    canActivate: [AuthGuard]\n  }\n  ,\n  {\n    path: 'PLOS',\n    loadChildren: () => import('./../Features/plos/plos.module').then(m => m.PLOSModule),\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { GlobalService } from '../Shared/Services/Global/global.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'OBE-Portal-Web';\n  constructor(private router: Router, private ngxService: NgxUiLoaderService) {\n    if (GlobalService.FacultyMember_ID == undefined) {\n      GlobalService.ApiUrl = document.getElementsByTagName('base')[0].href + 'api/';\n      GlobalService.AppBaseURL = document.getElementsByTagName('base')[0].href;\n      GlobalService.FacultyMember_ID = Number(localStorage.getItem('FacultyMember_ID'));\n      GlobalService.Semester_ID = Number(localStorage.getItem('Semester_ID'));\n      GlobalService.Permissions = JSON.parse(localStorage.getItem('Permissions'));\n      GlobalService.Deaprtment_ID = JSON.parse(localStorage.getItem('D_ID'));\n      GlobalService.Institute_ID = JSON.parse(localStorage.getItem('I_ID'));\n      GlobalService.Token = localStorage.getItem('Token');\n      GlobalService.IsStudent = Number(localStorage.getItem('IsStudent'));\n      GlobalService.Name = localStorage.getItem('User_Name');\n      GlobalService.StudentID = Number(localStorage.getItem('StudentID'));\n      \n      //localStorage.removeItem('FacultyMember_ID');\n      //localStorage.removeItem('Semester_ID');\n      //localStorage.removeItem('Permissions');\n      //localStorage.removeItem('D_ID');\n      //localStorage.removeItem('I_ID');\n      //localStorage.removeItem('Token');\n      //localStorage.removeItem('IsStudent');\n      //localStorage.removeItem('User_Name');\n    }\n    \n    if (Number(GlobalService.IsStudent) == 1) {\n      this.router.navigate(['/student']);\n    } else {\n      this.router.navigate(['/']);\n    }\n    \n  }\n}\n","<ngx-ui-loader></ngx-ui-loader>\n\n<div id=\"amazing-fusion\">\n  <app-header></app-header>\n  <app-side-bar></app-side-bar>\n  <router-outlet></router-outlet>\n</div>\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './../Shared/Components/header/header.component';\nimport { SideBarComponent } from './../Shared/Components/side-bar/side-bar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { InterceptorService } from '../Shared/Services/Global/interceptor.service';\nimport { AuthGuard } from '../Shared/Services/Global/auth.guard';\nimport { NgxUiLoaderModule } from 'ngx-ui-loader';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\n@NgModule({\n  declarations: [\n    AppComponent,HeaderComponent,SideBarComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      newestOnTop: true,\n      progressBar: true,\n      progressAnimation: \"increasing\",\n      timeOut: 5000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: false,\n      closeButton: true,\n      titleClass: 'toast-title'\n    }),\n    NgxUiLoaderModule.forRoot({\n      \"bgsColor\": \"red\",\n      \"bgsOpacity\": 0.5,\n      \"bgsPosition\": \"bottom-right\",\n      \"bgsSize\": 60,\n      \"bgsType\": \"ball-spin-clockwise\",\n      \"blur\": 5,\n      \"delay\": 0,\n      \"fastFadeOut\": true,\n      \"fgsColor\": \"#0864a6\",\n      \"fgsPosition\": \"center-center\",\n      \"fgsSize\": 200,\n      \"fgsType\": \"three-strings\",\n      \"gap\": 24,\n      \"logoPosition\": \"center-center\",\n      \"logoSize\": 120,\n      \"logoUrl\": \"\",\n      \"masterLoaderId\": \"master\",\n      \"overlayBorderRadius\": \"0\",\n      \"overlayColor\": \"rgba(76,132,168,0.26)\",\n      \"pbColor\": \"#0864a6\",\n      \"pbDirection\": \"ltr\",\n      \"pbThickness\": 3,\n      \"hasProgressBar\": false,\n      \"text\": \"loading...\",\n      \"textColor\": \"#0864a6\",\n      \"textPosition\": \"center-center\",\n      \"maxTime\": -1,\n      \"minTime\": 300\n    }),\n    FormsModule,\n    ReactiveFormsModule,\n    SweetAlert2Module.forRoot(),\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule\n    \n  ],\n  providers: [AuthGuard,{ provide: HTTP_INTERCEPTORS, useClass: InterceptorService, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { GlobalService } from './../../Shared/Services/Global/global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService {\n  public baseUrl: string;\n  constructor(private http: HttpClient,) {\n    this.baseUrl = GlobalService.ApiUrl;\n  }\n  GetSemesterListBasedOnFaculty<T>(data: any): Observable<T> {\n    return this.http.post<T>(this.baseUrl + 'Header/GetSemesterListBasedOnFaculty', data);\n  }\n  UpdatePassword<T>(data: any): Observable<T> {\n    return this.http.post<T>(this.baseUrl + 'Header/UpdatePassword', data);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderService } from '../../../Services/Header/header.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { GlobalService } from '../../Services/Global/global.service';\nimport { InterconnectedService } from '../../Services/Global/interconnected.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\ndeclare const $: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  Semester_Details_lst: any;\n  User_Name: string;\n  UpdatePasswordForm: FormGroup;\n  submitted = false;\n  IsStudent: boolean = false;\n  constructor(\n    private router: Router,\n    private header: HeaderService,\n    private toastr: ToastrService,\n    private formBuilder: FormBuilder,\n    private interConnectedService: InterconnectedService) {\n    this.IsStudent = false;\n    if (Number(GlobalService.IsStudent) == 1) {\n      this.router.navigate(['/student']);\n      this.IsStudent = true;\n    }\n    this.User_Name = GlobalService.Name;\n  }\n  ngOnInit() {\n    this.UpdatePasswordForm = this.formBuilder.group({\n      Current_Password: ['', [Validators.required]],\n      New_Password: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n      Confirm_Password: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n\n    }, { validator: this.MustMatch('New_Password', 'Confirm_Password') });\n\n\n    this.interConnectedService.CurrentSemesterID.subscribe(message => message = GlobalService.Semester_ID.toString()) // for get data\n    this.GetSemesterList();\n  }\n  MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        return;\n      }\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n  get Update_Password_Form() { return this.UpdatePasswordForm.controls; }\n  GetSemesterList() {\n    this.header.GetSemesterListBasedOnFaculty(GlobalService.FacultyMember_ID).\n      subscribe(\n        data => {\n          if (data != null) {\n            this.Semester_Details_lst = data;\n          }\n          else {\n            this.Semester_Details_lst = [];\n          }\n        },\n        error => {\n          this.toastr.error(\"Internal server error occured while processing your request\", \"Error!\")\n        });\n  }\n  UpdateSemesterID(e) {\n    this.interConnectedService.ChangeSemesterID(e.target.value);\n  }\n  Logout() {\n    localStorage.clear();\n    document.location.href = GlobalService.AppBaseURL;\n  }\n  ShowChangePassword() {\n    this.UpdatePasswordForm.reset();\n    this.submitted = false;\n    $(\"#Update-Password-Modal\").modal('show');\n  }\n  UpdatePassword() {\n    this.submitted = true;\n    if (this.UpdatePasswordForm.invalid) {\n      return;\n    }\n    this.Update_Password_Form.Current_Password.value;\n    var IsStudent = false;\n    var UserID = 0;\n    if (GlobalService.IsStudent == 1) {\n      IsStudent = true;\n      UserID = GlobalService.StudentID;\n    } else {\n      IsStudent = false;\n      UserID = GlobalService.FacultyMember_ID;\n    }\n    this.header.UpdatePassword({ \"Current_Password\": this.Update_Password_Form.Current_Password.value, \"New_Password\": this.Update_Password_Form.New_Password.value, \"UserID\": UserID, \"IsStudent\": IsStudent }).\n      subscribe(\n        data => {\n          if (data) {\n            $(\"#Update-Password-Modal\").modal('hide');\n            this.toastr.success(\"Password updated successfully\",'Password Updation!');\n          }\n          else {\n            this.toastr.error(\"Current password is not matched\", 'Password Updation!');\n          }\n        },\n        error => {\n          this.toastr.error(\"Internal server error occured while processing your request\", \"Error!\")\n        });\n  }\n}\n","<header>\n    <div class=\"logo\" *ngIf=\"IsStudent\"><a routerLink=\"student/main\" style=\"cursor: pointer;\">OBE Portal <sup>1.0(Beta)</sup> </a></div>\n    <div class=\"logo\" *ngIf=\"!IsStudent\"><a routerLink=\"dashboard/main\" style=\"cursor: pointer;\">OBE Portal <sup>1.0(Beta)</sup> </a></div>\n    <div class=\"practice\" data-toggle=\"tooltip\" data-placement=\"bottom\" id=\"HeaderSemesterDropdown\">\n      <h5>Select Semester</h5>\n      <select class=\"form-control\" (change)=\"UpdateSemesterID($event)\">\n        <option *ngFor=\"let i of Semester_Details_lst\" value=\"{{i.Semester_ID}}\">{{i.Semester_Alias}}</option>\n      </select>\n      <div class=\"clearfix\"></div>\n    </div>\n    <!-- <div id=\"header-progress-bar\" class=\"progress-style popover-bottom\" data-container=\"#header-progress-bar\" data-placement=\"bottom\" data-popwrapper=\"#header-progress\" rel=\"popover\" data-toggle=\"tooltip\" data-placement=\"bottom\">\n      <div class=\"progress-bar\" style=\"width:60%; background:#d9534f;\">\n        <div class=\"progress-value\">60%</div>\n      </div>\n    </div> -->\n    <div class=\"user\" data-toggle=\"tooltip\" data-placement=\"bottom\">\n      <ul>\n        <li class=\"dropdown left-dropdown\">\n          <a href=\"javascript:voide(0)\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"app-icon-Amazing-Fusion-35\"></i> {{this.User_Name}} <b class=\"caret\"></b></a>\n          <ul class=\"dropdown-menu\">\n            <li><a (click)=\"ShowChangePassword()\"><i class=\"fa fa-key\"></i> Change Password</a></li>\n            <li><a (click)=\"Logout()\"><i class=\"app-icon-IconSet-1-95\"></i> Logout</a></li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n    <div class=\"clearfix\"></div>\n  </header>\n<div class=\"modal-section\" style=\"position: initial;\">\n  <div class=\"modal fade modal-sm margin-t41\" id=\"Update-Password-Modal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <div class=\"section-heading\">\n            <h2 class=\"pull-left\">Update Password</h2>\n            <div class=\"pull-right\">\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><i class=\"app-icon-IconSet-1-12\"></i></button>\n            </div>\n            <div class=\"clearfix\"></div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <form [formGroup]=\"UpdatePasswordForm\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && Update_Password_Form.Current_Password.errors }\">\n                  <label class=\"control-label\">Current Password <span class=\"text-danger\">*</span></label>\n                  <input type=\"password\" class=\"form-control input-sm\" formControlName=\"Current_Password\" autocomplete=\"off\">\n                  <div *ngIf=\"submitted && Update_Password_Form.Current_Password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"Update_Password_Form.Current_Password.errors.required\" class=\"text-danger\">Current Password is required </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && Update_Password_Form.New_Password.errors }\">\n                  <label class=\"control-label\">New Password <span class=\"text-danger\">*</span></label>\n                  <input type=\"password\" class=\"form-control input-sm\" formControlName=\"New_Password\" autocomplete=\"off\">\n                  <div *ngIf=\"submitted && Update_Password_Form.New_Password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"Update_Password_Form.New_Password.errors.required\" class=\"text-danger\">New Password is required </div>\n                    <div *ngIf=\"Update_Password_Form.New_Password.errors.minlength\" class=\"text-danger\">Password must be at least 5 characters</div>\n                    <div *ngIf=\"Update_Password_Form.New_Password.errors.maxlength\" class=\"text-danger\">Password max be 20 characters</div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': submitted && Update_Password_Form.Confirm_Password.errors }\">\n                  <label class=\"control-label\">Confirm Password <span class=\"text-danger\">*</span></label>\n                  <input type=\"password\" class=\"form-control input-sm\" formControlName=\"Confirm_Password\" autocomplete=\"off\">\n                  <div *ngIf=\"submitted && Update_Password_Form.Confirm_Password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"Update_Password_Form.Confirm_Password.errors.required\" class=\"text-danger\">Confirm Password is required </div>\n                    <div *ngIf=\"Update_Password_Form.Confirm_Password.errors.mustMatch\" class=\"text-danger\">New and current password must match</div>\n                    <div *ngIf=\"Update_Password_Form.Confirm_Password.errors.minlength\" class=\"text-danger\">Password must be at least 5 characters</div>\n                    <div *ngIf=\"Update_Password_Form.Confirm_Password.errors.maxlength\" class=\"text-danger\">Password max be 20 characters</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\n          <button type=\"button\" class=\"btn btn-info\" (click)=\"UpdatePassword()\">Save</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GlobalService } from '../../Services/Global/global.service';\ndeclare const $: any;\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n  Is_Permission_Reports_Side_Bar: boolean = false;\n  Is_Permission_Setting_Side_Bar: boolean = false;\n  Is_Permission_Indirect_Assessment_Side_Bar: boolean = false;\n  IsStudent: boolean = false;\n  constructor(private router: Router) {\n    if (GlobalService.IsStudent == 1) {\n      this.Is_Permission_Reports_Side_Bar = false;\n      this.Is_Permission_Setting_Side_Bar = false;\n      this.Is_Permission_Indirect_Assessment_Side_Bar= false;\n      \n      this.IsStudent = true;\n    } else {\n      this.IsStudent = false;\n      this.Is_Permission_Reports_Side_Bar = GlobalService.Permissions.indexOf(\"Reports_Side_Bar\") >= 0 ? true : false;\n      this.Is_Permission_Setting_Side_Bar = GlobalService.Permissions.indexOf(\"Setting_Side_Bar\") >= 0 ? true : false;\n      this.Is_Permission_Indirect_Assessment_Side_Bar = GlobalService.Permissions.indexOf(\"Indirect_Assessment\") >= 0 ? true : false;\n      \n    }\n    \n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","<nav class=\"nav-sidebar main-sidebar\">\n  <ul class=\"nav tabs\">\n\n\n    <li class=\"active\" *ngIf=\"IsStudent\"><a data-toggle=\"tab\"> <i class=\"icon app-icon-EHR-Nav-Icons-02\"></i> Dashboard </a></li>\n    <li *ngIf=\"!IsStudent\" data-toggle=\"tab\" routerLinkActive=\"active\"><a [routerLink]=\"['dashboard']\" data-toggle=\"tab\"> <i class=\"icon app-icon-EHR-Nav-Icons-02\"></i> Dashboard </a></li>\n    <li *ngIf=\"!IsStudent\" data-toggle=\"tab\" routerLinkActive=\"active\"><a [routerLink]=\"['framework']\" data-toggle=\"tab\"> <i class=\"icon app-icon-EHR-Nav-Icons-05\"></i> Framework </a></li>\n    <li *ngIf=\"Is_Permission_Reports_Side_Bar && !IsStudent\" data-toggle=\"tab\" data-position='right' routerLinkActive=\"active\"><a [routerLink]=\"['reports']\" data-toggle=\"tab\"> <i class=\"icon app-icon-IconSet-1-80\"></i> Reports </a></li>\n    <li *ngIf=\"Is_Permission_Indirect_Assessment_Side_Bar && !IsStudent\" data-toggle=\"tab\" data-position=\"right\" routerLinkActive=\"active\"><a [routerLink]=\"['indirectAssessment']\" data-toggle=\"tab\"> <i class=\"icon app-icon-IconSet-1-27\"></i> Indirect Assessments    </a></li>\n    <li *ngIf=\"Is_Permission_Setting_Side_Bar && !IsStudent\" data-toggle=\"tab\" data-position=\"right\" routerLinkActive=\"active\"><a [routerLink]=\"['settings']\" data-toggle=\"tab\"> <i class=\"icon app-icon-IconSet-1-75\"></i> Settings </a></li>\n  <!--  <li  data-toggle=\"tab\" data-position=\"right\" routerLinkActive=\"active\"><a [routerLink]=\"'PLOS'\" data-toggle=\"tab\"> <i class=\"icon app-icon-IconSet-1-28\"></i> PLOs </a></li>-->\n\n  </ul>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { GlobalService } from './global.service';\nimport { Router } from '@angular/router'\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _router: Router) { }\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (GlobalService.Token == null || GlobalService.Token == undefined || GlobalService.Token == \"\") {\n      document.location.href = GlobalService.AppBaseURL;\n      return false;\n    }\n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class GlobalService {\n  public static ApiUrl: string = '';\n  public static AppBaseURL: string = ''; \n  public static FacultyMember_ID: number;\n  public static Token: string;\n  public static Semester_ID: number;\n  public static Offered_Course_ID: number;\n  public static Is_Course: boolean;\n  public static Is_Completed: boolean;\n  public static Report_Sub_Tab: boolean = false;\n  public static Permissions: any[] = [];\n  public static TempFacultyMember_ID: number;\n  public static Deaprtment_ID: number;\n  public static Institute_ID: number;\n  public static CourseCategory: number;\n  public static IsStudent: number;\n  public static Name: string;\n  public static StudentID: number;\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { tap } from 'rxjs/operators';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterceptorService implements HttpInterceptor {\n  intercept(req: HttpRequest<any>,\n    next: HttpHandler): Observable<HttpEvent<any>> { \n    if (GlobalService.Token != null) {\n      const cloned = req.clone({\n        headers: req.headers.set(\"Authorization\",\n          'Bearer ' + GlobalService.Token)\n      });\n      return next.handle(cloned).pipe\n        (\n          tap(\n            succ => { },\n            err => {\n              if (err.status === 403 || err.status === 401) {\n                localStorage.clear();\n                document.location.href = GlobalService.AppBaseURL;\n              }\n            }\n          )\n        );\n    }\n    else {\n     // document.location.href = GlobalService.AppBaseURL;\n      return next.handle(req);\n    }\n  }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterconnectedService {\n\n  public messageSource = new BehaviorSubject('');\n  CurrentSemesterID = this.messageSource.asObservable();\n\n  public searchSource = new BehaviorSubject('');\n  searchvaluetemp = this.searchSource.asObservable();\n\n  public GetSelectedCoursesCLOs = new BehaviorSubject('');\n  SetSelectedCoursesCLOs = this.GetSelectedCoursesCLOs.asObservable();\n\n  public GetSelectedFacultyDashboard = new BehaviorSubject('');\n  SetSelectedFacultyDashboard = this.GetSelectedFacultyDashboard.asObservable();\n\n  public CloseTab = new BehaviorSubject('');\n  TriggerCloseTab = this.CloseTab.asObservable();\n\n  public GetCourseDetailsCounts = new BehaviorSubject('');\n  SetCourseDetailsCounts = this.GetCourseDetailsCounts.asObservable();\n\n\n  constructor() { }\n  ChangeSemesterID(searchvalue: string) {\n    this.searchSource.next(searchvalue);\n  }\n  SetSelectedCoursesData(searchvalue: string) {\n    this.GetSelectedCoursesCLOs.next(searchvalue);\n  }\n  SetSelectedFacultyDataForDashboard(searchvalue: string) {\n    this.GetSelectedFacultyDashboard.next(searchvalue);\n  }\n  CloseTriggeredTab(searchvalue: string) {\n    this.CloseTab.next(searchvalue);\n  }\n  UpdateCourseDetailsCounts(searchvalue: string) {\n    this.GetCourseDetailsCounts.next(searchvalue);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// ../wwwroot/dist\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/Core/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}